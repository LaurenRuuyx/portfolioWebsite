@import url('https://fonts.cdnfonts.com/css/common-pixel');
@import url('https://fonts.cdnfonts.com/css/fanda-sans');

  .App {
  background-color:#282c34;
  min-height: 520vh;
  width: 100%;
  z-index: 0;
}

.App-header {
  background-color: #282c34;
  min-height: 10vh;
  display: flex;
  font-size: calc(10px + 2vmin);
  color: white;
  text-align: center;
}

#maintitle {
  font-size: 80px;
  animation: dissapear 0.1s linear;
  animation-iteration-count: 1;
}


.cube-wrap {
  --size: 30vmin;
  position: fixed;
  top: 50%;
  left: 50%;
  width: 0;
  height: 0;
  perspective: 100vmin;
  z-index: 1;
}
.cube {
  overflow: visible;
  transform-style: preserve-3d;
  transform: rotateX(360deg) rotateZ(45deg) rotateY(-45deg);
  animation: cube 0.5s linear;
}

@keyframes cube {
  to {
    transform: rotateX(0deg) rotateZ(45deg) rotateY(-45deg);
  }
}

.side {
  animation: example 1s linear;
  border-style: groove;
  border-color: black;
  border-width: 1px;
  position: absolute;
  width: var(--size);
  height: var(--size);
  background-color: #eee;
  backface-visibility: visible;
  top: calc(var(--size) * -.5);
  left: calc(var(--size) * -.5);
  filter: brightness(50%);
}
.top {

  background-color: rgb(255,0,0);
  transform: rotateX(90deg) translateZ(calc(var(--size) * .5));
}
.bottom {
  background-color: rgb(255,0,0);
  transform: rotateX(90deg) translateZ(calc(var(--size) * -.5));
}
.left {

  background-color: rgb(255,0,0);
  transform: rotateY(90deg) translateZ(calc(var(--size) * .5));
}
.right {

  background-color: rgb(255,0,0);
  transform: rotateY(90deg) translateZ(calc(var(--size) * -.5));
}
.front {

  background-color: rgb(255,0,0);
  transform: translateZ(calc(var(--size) * .5));
}
.back {

  background-color: rgb(255,0,0);
  transform: translateZ(calc(var(--size) * -.5));
}


.spacing-div {
  min-height: 100vh;
}

#secondSpacer {
  min-height: 55vh;
}




.lightsDiv {
  filter: brightness(90%);
  position: relative;
  background-color: rgb(255,0,0);
  margin-left: 5%;
  margin-right: 5%;
  border-radius:25px;
  padding: 4px;
  height: 700px;
  width: 1000px;
  z-index: 1;
  animation: example 1s linear;
  animation-iteration-count: infinite;
  -webkit-box-shadow: 0 0 50px rgb(255,0,0);
        box-shadow: 0 0 50px rgb(255,0,0);
  

}

#footer {
  width: auto;
  height: auto;
  display: flex;
  flex-wrap: wrap;
  flex-direction: column;
}

.lightsDiv2-container {
  display: flex;
  justify-content: flex-end;
  margin-bottom: 45vh;
}

.lightsDiv-container{
  /* margin-left:53%; */
  /* position: absolute; */
  display: flex;
  justify-content: flex-start;
  margin-bottom: 45vh;
}

video {
  width: 100%;
  height: 100%;
  object-fit:cover;
  position:fixed;
  top:0%;
  z-index: 0;
  filter: brightness(60%);
}

.contentDiv {
  font-family: 'Fanda Sans', sans-serif;
  background-color:rgb(0, 0, 0);
  border-radius: 25px;
  min-height: 100%;
  z-index: 2;
  color: white;
  display:flex;
  flex-direction:column;
  width: auto;
}

.textC{
  margin: 20px;
  font-size: 23px;
}

.titleCard {
  margin: 5px;
  font-size: 23px;
  text-align: center;
}

.content {
  font-family: 'Fanda Sans', sans-serif;
  position: absolute;
  width: 100%;
  height:auto;
  top: 0;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  color: rgb(255, 255, 255);
  animation: dissapear 0.1s linear;
  animation-iteration-count: 1;
}

.buttonDivs{
  display:grid;
  justify-items: center;
  margin-bottom: 4%;
  grid-template-columns: 1fr 1fr 1fr;
  width: 100%;
  min-height: 100%;
  z-index: 4;
  transition: 0.1s;
}

.links {
  display: flex;
  margin-bottom: 5%;
  border-radius: 25px;
  border: solid;
  color:white;
  border-color: white;
  background-color: rgb(0, 0, 0);
  height: 400px;
  width: 500px;
  z-index: 4;
  animation: borderColor 1s linear;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  transition: 150ms ease-in-out;
  cursor: pointer;
}

.buttonDivs :hover{
  background-color: white;
  color: black;

}

@keyframes borderColor{
  100%,0%{
    border-color: rgb(255,0,0);
  }
  8%{
    border-color: rgb(255,127,0);
  }
  16%{
    border-color: rgb(255,255,0);
  }
  25%{
    border-color: rgb(127,255,0);
  }
  33%{
    border-color: rgb(0,255,0);
  }
  41%{
    border-color: rgb(0,255,127);
  }
  50%{
    border-color: rgb(0,255,255);
  }
  58%{
    border-color: rgb(0,127,255);
  }
  66%{
    border-color: rgb(0,0,255);
  }
  75%{
    border-color: rgb(127,0,255);
  }
  83%{
    border-color: rgb(255,0,255);
  }
  91%{
    border-color: rgb(255,0,127);
  }
}


#underCube{
  position: absolute;
  margin-top: 50%;
}

@keyframes dissapear{
  to{
    font-size: 0px;
    }
}


.content h1{ 
  font-size: 70px;
  font-weight: 600;
  text-transform: uppercase;
  text-shadow: 1px 1px 0px rgb(0, 0, 0);
}

.content h2{
  display: inline-block; 
  justify-content: center;  
}


@keyframes example{
  100%,0%{
    background-color: rgb(255,0,0);
    box-shadow: 0 0 50px rgb(255,0,0);
  }
  8%{
    background-color: rgb(255,127,0);
    box-shadow: 0 0 50px rgb(255,127,0);
  }
  16%{
    background-color: rgb(255,255,0);
    box-shadow: 0 0 50px (255,255,0);
  }
  25%{
    background-color: rgb(127,255,0);
    box-shadow: 0 0 50px rgb(127,255,0);
  }
  33%{
    background-color: rgb(0,255,0);
    box-shadow: 0 0 50px (0,255,0);
  }
  41%{
    background-color: rgb(0,255,127);
    box-shadow: 0 0 50px rgb(0,255,127);
  }
  50%{
    background-color: rgb(0,255,255);
    box-shadow: 0 0 50px rgb(0,255,255);
  }
  58%{
    background-color: rgb(0,127,255);
    box-shadow: 0 0 50px rgb(0,127,255);
  }
  66%{
    background-color: rgb(0,0,255);
    box-shadow: 0 0 50px rgb(0,0,255);
  }
  75%{
    background-color: rgb(127,0,255);
    box-shadow: 0 0 50px rgb(127,0,255);
  }
  83%{
    background-color: rgb(255,0,255);
    box-shadow: 0 0 50px rgb(255,0,255);
  }
  91%{
    background-color: rgb(255,0,127);
    box-shadow: 0 0 50px rgb(255,0,127);
  }
  
}

@media (max-width: 1760px){
  .links{
    width: 250px;
    height: 200px;
    font-size: 10px;

  }
  #maintitle{
    font-size: 50px;
  }
}




:root * {
  /* Pause the animation */
  animation-play-state: paused;
  /* Bind the animation to scroll */
  animation-delay: calc(var(--scroll) * -0.79s);
  
  /* These last 2 properites clean up overshoot weirdness */
  animation-iteration-count: infinite;
  animation-fill-mode: both;
}

:root .content, #maintitle {
  animation-play-state: paused;
  animation-delay: calc(var(--scroll) * -1s);
  animation-iteration-count: 1;

  
}